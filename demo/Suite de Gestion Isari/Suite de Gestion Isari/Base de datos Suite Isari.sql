USE [master]
GO

 CREATE DATABASE SuiteGestionIsari;

 USE SuiteGestionIsari;


CREATE SCHEMA dbo;


CREATE TABLE SuiteGestionIsari.dbo.CATEGORIA_PRODUCTOS (
	ID_CATEGORIA int NOT NULL,
	DESCRIPCION nvarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	CONSTRAINT PK__CATEGORI__4BD51FA56F205036 PRIMARY KEY (ID_CATEGORIA)
);



CREATE TABLE SuiteGestionIsari.dbo.CLIENTES (
	ID_CLIENTE int NOT NULL,
	NOMBRE nvarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	P_APELLIDO nvarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	S_APELLIDO nvarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	CELULAR nvarchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	CORREO nvarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	CONSTRAINT PK__CLIENTES__23A341307D173CDB PRIMARY KEY (ID_CLIENTE)
);


CREATE TABLE SuiteGestionIsari.dbo.T_HORARIOS (
	ID_HORARIO int NOT NULL,
	DIA_SEMANA nvarchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	HORA_ENTRADA time NOT NULL,
	HORA_SALIDA time NOT NULL,
	CONSTRAINT PK__T_HORARI__CDBBBA34700360E8 PRIMARY KEY (ID_HORARIO)
);




CREATE TABLE SuiteGestionIsari.dbo.T_ROLES (
	ID_ROL int NOT NULL,
	DESCRIPCION nvarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	CONSTRAINT PK__T_ROLES__203B0F685B2887EE PRIMARY KEY (ID_ROL)
);




CREATE TABLE SuiteGestionIsari.dbo.T_PRODUCTOS (
	ID_PRODUCTO int NOT NULL,
	NOMBRE nvarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	DESCRIPCION nvarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	PROVEEDOR nvarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	PRECIO decimal(10,2) NOT NULL,
	CANTIDAD_DISPONIBLE int NOT NULL,
	ID_CATEGORIA int NOT NULL,
	CONSTRAINT PK__PRODUCTO__88BD03576E55F2C6 PRIMARY KEY (ID_PRODUCTO),
	CONSTRAINT FK__PRODUCTOS__ID_CA__6477ECF3 FOREIGN KEY (ID_CATEGORIA) REFERENCES SuiteGestionIsari.dbo.CATEGORIA_PRODUCTOS(ID_CATEGORIA)
);



CREATE TABLE SuiteGestionIsari.dbo.FACTURA (
	ID_FACTURA int NOT NULL,
	FECHA_VENTA date NOT NULL,
	ID_CLIENTE int NOT NULL,
	ID_PRODUCTO int NOT NULL,
	CANTIDAD int NOT NULL,
	PRECIO decimal(10,2) NOT NULL,
	TOTAL decimal(10,2) NOT NULL,
	CONSTRAINT PK__FACTURA__4A921BED092F219C PRIMARY KEY (ID_FACTURA),
	CONSTRAINT FK__FACTURA__ID_CLIE__628FA481 FOREIGN KEY (ID_CLIENTE) REFERENCES SuiteGestionIsari.dbo.CLIENTES(ID_CLIENTE),
	CONSTRAINT FK__FACTURA__ID_PROD__6383C8BA FOREIGN KEY (ID_PRODUCTO) REFERENCES SuiteGestionIsari.dbo.PRODUCTOS(ID_PRODUCTO)
);



CREATE TABLE SuiteGestionIsari.dbo.SOLICITUD_VACACIONES (
	ID_SOLICITUD int NOT NULL,
	ID_EMPLEADO bigint NOT NULL,
	FECHA_SOLICITUD date NOT NULL,
	FECHA_FINAL date NOT NULL,
	CANTIDAD_DIAS int NOT NULL,
	ESTADO nvarchar(50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	CONSTRAINT PK__SOLICITU__F090D584D002E257 PRIMARY KEY (ID_SOLICITUD)
);



CREATE TABLE SuiteGestionIsari.dbo.T_EMPLEADOS (
	ID_EMPLEADO bigint NOT NULL,
	CEDULA nvarchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	NOMBRE nvarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	EMAIL nvarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	ESTADO bit NOT NULL,
	ID_ERROR bigint NULL,
	CONTRASENA nvarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	FECHA_CONTRATACION date NOT NULL,
	TELEFONO nvarchar(20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	ID_ROL int NULL,
	ID_PUESTO int NULL,
	ID_VACACION bigint NULL,
	SOLICITUD_VACACIONES int NULL,
	CONSTRAINT PK__T_EMPLEA__922CA2699C98B6D9 PRIMARY KEY (ID_EMPLEADO)
);



CREATE TABLE SuiteGestionIsari.dbo.T_ERRORES (
	ID_ERROR bigint NOT NULL,
	ID_EMPLEADO bigint NOT NULL,
	DESCRIPCION nvarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	FECHA datetime NOT NULL,
	CONSTRAINT PK__T_ERRORE__9046136AC6A55B3F PRIMARY KEY (ID_ERROR)
);



CREATE TABLE SuiteGestionIsari.dbo.T_POSICIONES (
	ID_PUESTO int IDENTITY(1,1) NOT NULL,
	NOMBRE_POSICION nvarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL,
	DESCRIPCION nvarchar(255) COLLATE SQL_Latin1_General_CP1_CI_AS NULL,
	SALARIO decimal(10,2) NOT NULL,	
	CONSTRAINT PK__T_POSICI__88D8DDB14593B656 PRIMARY KEY (ID_PUESTO)
);



CREATE TABLE SuiteGestionIsari.dbo.T_VACACIONES (
	ID_VACACION bigint NOT NULL,
	ID_EMPLEADO bigint NOT NULL,
	FECHA_INICIO date NOT NULL,
	FECHA_FIN date NOT NULL,
	DIAS_TOTALES int NOT NULL,
	CONSTRAINT PK__T_VACACI__262D75615C90A401 PRIMARY KEY (ID_VACACION)
);



ALTER TABLE SuiteGestionIsari.dbo.SOLICITUD_VACACIONES ADD CONSTRAINT FK__SOLICITUD__ID_EM__619B8048 FOREIGN KEY (ID_EMPLEADO) REFERENCES SuiteGestionIsari.dbo.T_EMPLEADOS(ID_EMPLEADO);

ALTER TABLE SuiteGestionIsari.dbo.T_EMPLEADOS ADD CONSTRAINT FK__T_EMPLEAD__ID_PU__5DCAEF64 FOREIGN KEY (ID_PUESTO) REFERENCES SuiteGestionIsari.dbo.T_POSICIONES(ID_PUESTO);
ALTER TABLE SuiteGestionIsari.dbo.T_EMPLEADOS ADD CONSTRAINT FK__T_EMPLEAD__ID_RO__5CD6CB2B FOREIGN KEY (ID_ROL) REFERENCES SuiteGestionIsari.dbo.T_ROLES(ID_ROL);
ALTER TABLE SuiteGestionIsari.dbo.T_EMPLEADOS ADD CONSTRAINT FK__T_EMPLEAD__ID_VA__5EBF139D FOREIGN KEY (ID_VACACION) REFERENCES SuiteGestionIsari.dbo.T_VACACIONES(ID_VACACION);


ALTER TABLE SuiteGestionIsari.dbo.T_ERRORES ADD CONSTRAINT FK__T_ERRORES__ID_EM__5FB337D6 FOREIGN KEY (ID_EMPLEADO) REFERENCES SuiteGestionIsari.dbo.T_EMPLEADOS(ID_EMPLEADO);


ALTER TABLE SuiteGestionIsari.dbo.T_VACACIONES ADD CONSTRAINT FK__T_VACACIO__ID_EM__60A75C0F FOREIGN KEY (ID_EMPLEADO) REFERENCES SuiteGestionIsari.dbo.T_EMPLEADOS(ID_EMPLEADO);
------------------------------------------------------------------------------------------Codigo base---------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------Inicio SP---------------------------------------------------------------------------------------------


--------------------------Agregar Puestos laborales-------------------------
Create PROCEDURE AgregarPuesto
    @NOMBRE_POSICION NVARCHAR(255),
    @Descripcion NVARCHAR(500) = NULL,
    @Salario DECIMAL(18,2)
AS
BEGIN   
    IF NOT EXISTS (SELECT 1 FROM T_POSICIONES WHERE NOMBRE_POSICION = @NOMBRE_POSICION)
    BEGIN
        
        INSERT INTO T_Posiciones (NOMBRE_POSICION, DESCRIPCION, SALARIO)
        VALUES (@NOMBRE_POSICION, @Descripcion, @Salario );      
    END 
END;



--------------------------Consulta Puestos laborales-------------------------
CREATE PROCEDURE ObtenerPuestos
AS
BEGIN
    SELECT ID_PUESTO, NOMBRE_POSICION, DESCRIPCION, SALARIO
    FROM T_POSICIONES
    
END;



-------------------------CONSULTA PUESTO INDIVIDUAL----------------------------

Create PROCEDURE ConsultaPuesto

@ID_PUESTO INT
AS
BEGIN

  
    SELECT ID_PUESTO,NOMBRE_POSICION, DESCRIPCION,SALARIO
    FROM T_POSICIONES where ID_PUESTO=@ID_PUESTO;
END;

---------------------------Actualizar Puesto-----------------------------------
CREATE PROCEDURE ActualizarPuesto
    @ID_PUESTO INT,
    @NOMBRE_POSICION NVARCHAR(255),
    @DESCRIPCION NVARCHAR(500),
    @SALARIO DECIMAL(18,2)
    
AS
BEGIN
	
    IF NOT EXISTS (SELECT 1 FROM T_POSICIONES 
					WHERE (NOMBRE_POSICION = @NOMBRE_POSICION)
					 AND ID_PUESTO != @ID_PUESTO)
    BEGIN       
        UPDATE T_POSICIONES
        SET 
            NOMBRE_POSICION = @NOMBRE_POSICION,
            DESCRIPCION = @DESCRIPCION,
            SALARIO = @SALARIO 
			WHERE ID_PUESTO=@ID_PUESTO;
    END
END;

--------------------------Agregar Productos-------------------------
Create PROCEDURE AgregarProducto
    @NOMBRE NVARCHAR(255),
    @DESCRIPCION NVARCHAR(500) = NULL,
	@PROVEEDOR NVARCHAR(255),
    @PRECIO DECIMAL(18,2),
	@CANTIDAD_DISPONIBLE INT,
	@ID_CATEGORIA INT	
AS
BEGIN   
    IF NOT EXISTS (SELECT 1 FROM T_PRODUCTOS WHERE NOMBRE = @NOMBRE)
    BEGIN
        
        INSERT INTO T_PRODUCTOS (NOMBRE, DESCRIPCION, PROVEEDOR, PRECIO, CANTIDAD_DISPONIBLE, ID_CATEGORI)
        VALUES (@NOMBRE, @DESCRIPCION, @PROVEEDOR, @PRECIO, @CANTIDAD_DISPONIBLE, @ID_CATEGORIA);      
    END 
END;

--------------------------Consultar Productos-------------------------
CREATE PROCEDURE ObtenerProductos
AS
BEGIN
    SELECT ID_PRODUCTO, NOMBRE, DESCRIPCION, PROVEEDOR, PRECIO, CANTIDAD_DISPONIBLE, ID_CATEGORIA
    FROM T_PRODUCTOS
END;

--------------------------Consultar Producto Individual-------------------------
Create PROCEDURE ConsultaProducto

@ID_PRODUCTO INT
AS
BEGIN
    SELECT ID_PRODUCTO, NOMBRE, DESCRIPCION, PROVEEDOR, PRECIO, CANTIDAD_DISPONIBLE, ID_CATEGORIA
    FROM T_PRODUCTOS where ID_PRODUCTO=@ID_PRODUCTO;
END;

--------------------------Actualizar Producto-------------------------
CREATE PROCEDURE ActualizarProducto
    @ID_PRODUCTO INT,
    @NOMBRE NVARCHAR(255),
    @DESCRIPCION NVARCHAR(500),
    @PROVEEDOR NVARCHAR(500),
	@PRECIO DECIMAL(18,2),
	@CANTIDAD_DISPONIBLE INT,
	@ID_CATEGORIA INT
AS
BEGIN
	
    IF NOT EXISTS (SELECT 1 FROM T_PRODUCTOS 
					WHERE (NOMBRE = @NOMBRE)
					 AND ID_PRODUCTO != @ID_PRODUCTO)
    BEGIN       
        UPDATE T_PRODUCTOS
        SET 
            NOMBRE = @NOMBRE_POSICION,
            DESCRIPCION = @DESCRIPCION,
			PROVEEDOR = @PROVEEDOR,
            PRECIO = @PRECIO,
			CANTIDAD_DISPONIBLE = @CANTIDAD_DISPONIBLE,
			ID_CATEGORIA = @ID_CATEGORIA
			WHERE ID_PRODUCTO=@ID_PRODUCTO;
    END
END;

-- --------------------------Agregar Categoría-------------------------
CREATE PROCEDURE AgregarCategoria
    @DESCRIPCION NVARCHAR(255)
AS
BEGIN   
    IF NOT EXISTS (SELECT 1 FROM CATEGORIAS WHERE DESCRIPCION = @DESCRIPCION)
    BEGIN        
        INSERT INTO CATEGORIAS (DESCRIPCION)
        VALUES (@DESCRIPCION);      
    END 
END;

-- --------------------------Consultar Categorías-------------------------
CREATE PROCEDURE ObtenerCategorias
AS
BEGIN
    SELECT ID_CATEGORIA, DESCRIPCION
    FROM CATEGORIAS;
END;

-- --------------------------Consultar Categoría Individual-------------------------
CREATE PROCEDURE ConsultaCategoria
    @ID_CATEGORIA INT
AS
BEGIN
    SELECT ID_CATEGORIA, DESCRIPCION
    FROM CATEGORIAS
    WHERE ID_CATEGORIA = @ID_CATEGORIA;
END;

-- --------------------------Actualizar Categoría-------------------------
CREATE PROCEDURE ActualizarCategoria
    @ID_CATEGORIA INT,
    @DESCRIPCION NVARCHAR(255)
AS
BEGIN    
    IF NOT EXISTS (SELECT 1 FROM CATEGORIAS 
                   WHERE DESCRIPCION = @DESCRIPCION 
                   AND ID_CATEGORIA != @ID_CATEGORIA)
    BEGIN       
        UPDATE CATEGORIAS
        SET DESCRIPCION = @DESCRIPCION
        WHERE ID_CATEGORIA = @ID_CATEGORIA;
    END
END;
